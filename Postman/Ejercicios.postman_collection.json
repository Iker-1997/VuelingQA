{
	"info": {
		"_postman_id": "5c23f28d-a7d7-4a59-bbc5-2933bef36ed1",
		"name": "Ejercicios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27582877"
	},
	"item": [
		{
			"name": "PokeAPI",
			"item": [
				{
					"name": "Catch'em all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.response.code;\r",
									"pm.test(\"Test to validate status\", validateStatusOk(statusCode));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{pkm}}?limit=1281",
							"host": [
								"{{url}}{{pkm}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "1281"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Typhlosion",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.response.code;\r",
									"pm.test(\"Test to validate status\", validateStatusOk(statusCode));\r",
									"\r",
									"\r",
									"pm.test(\"Test to validate pokemon name\", function(){\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"typhlosion\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}{{pkm}}/157",
							"host": [
								"{{url}}{{pkm}}"
							],
							"path": [
								"157"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ReqRes",
			"item": [
				{
					"name": "Create user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.response.code;\r",
									"pm.test(\"Test to validate status\", validateStatusOk(statusCode));\r",
									"\r",
									"pm.test(\"Test to validate id created\", function(){\r",
									"    const jsonData = pm.response.json();\r",
									"    if(jsonData.id != null){\r",
									"        console.log(\"The id of the POST call is \" + jsonData.id);\r",
									"        return true;\r",
									"    }else{\r",
									"        return false;\r",
									"    };\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}{{user}}?name=Iker&job=qa",
							"host": [
								"{{url}}{{user}}"
							],
							"query": [
								{
									"key": "name",
									"value": "Iker"
								},
								{
									"key": "job",
									"value": "qa"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"let statusCode = pm.response.code;\r",
									"pm.test(\"Test to validate status\", validateStatusOk(statusCode));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}{{register}}?name=Carlos&year=1999",
							"host": [
								"{{url}}{{register}}"
							],
							"query": [
								{
									"key": "name",
									"value": "Carlos"
								},
								{
									"key": "year",
									"value": "1999"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"validateStatusOk  = function (codigo){",
					"    if (200 <= codigo < 300){",
					"        return true;",
					"    }",
					"    return false;",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}